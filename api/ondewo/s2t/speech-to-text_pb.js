// source: ondewo/s2t/speech-to-text.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.ondewo.s2t.CTCDecoding', null, global);
goog.exportSymbol('proto.ondewo.s2t.CkptFile', null, global);
goog.exportSymbol('proto.ondewo.s2t.CtcAcousticModels', null, global);
goog.exportSymbol('proto.ondewo.s2t.Description', null, global);
goog.exportSymbol('proto.ondewo.s2t.Inference', null, global);
goog.exportSymbol('proto.ondewo.s2t.LanguageModel', null, global);
goog.exportSymbol('proto.ondewo.s2t.ListS2tDomainsRequest', null, global);
goog.exportSymbol('proto.ondewo.s2t.ListS2tDomainsResponse', null, global);
goog.exportSymbol('proto.ondewo.s2t.ListS2tLanguagesRequest', null, global);
goog.exportSymbol('proto.ondewo.s2t.ListS2tLanguagesResponse', null, global);
goog.exportSymbol('proto.ondewo.s2t.ListS2tPipelinesRequest', null, global);
goog.exportSymbol('proto.ondewo.s2t.ListS2tPipelinesResponse', null, global);
goog.exportSymbol('proto.ondewo.s2t.Logging', null, global);
goog.exportSymbol('proto.ondewo.s2t.Matchbox', null, global);
goog.exportSymbol('proto.ondewo.s2t.Normalization', null, global);
goog.exportSymbol('proto.ondewo.s2t.PostProcessing', null, global);
goog.exportSymbol('proto.ondewo.s2t.PostProcessors', null, global);
goog.exportSymbol('proto.ondewo.s2t.PtFiles', null, global);
goog.exportSymbol('proto.ondewo.s2t.Pyannote', null, global);
goog.exportSymbol('proto.ondewo.s2t.Quartznet', null, global);
goog.exportSymbol('proto.ondewo.s2t.QuartznetTriton', null, global);
goog.exportSymbol('proto.ondewo.s2t.S2tPipelineId', null, global);
goog.exportSymbol('proto.ondewo.s2t.Speech2TextConfig', null, global);
goog.exportSymbol('proto.ondewo.s2t.StreamingServer', null, global);
goog.exportSymbol('proto.ondewo.s2t.StreamingSpeechRecognition', null, global);
goog.exportSymbol('proto.ondewo.s2t.SymSpell', null, global);
goog.exportSymbol('proto.ondewo.s2t.TranscribeFileRequest', null, global);
goog.exportSymbol('proto.ondewo.s2t.TranscribeFileResponse', null, global);
goog.exportSymbol('proto.ondewo.s2t.TranscribeStreamRequest', null, global);
goog.exportSymbol('proto.ondewo.s2t.TranscribeStreamResponse', null, global);
goog.exportSymbol('proto.ondewo.s2t.VoiceActivityDetection', null, global);
goog.exportSymbol('proto.ondewo.s2t.Wav2Vec', null, global);
goog.exportSymbol('proto.ondewo.s2t.WordTiming', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.TranscribeStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.TranscribeStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.TranscribeStreamRequest.displayName = 'proto.ondewo.s2t.TranscribeStreamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.TranscribeStreamResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.TranscribeStreamResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.TranscribeStreamResponse.displayName = 'proto.ondewo.s2t.TranscribeStreamResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.TranscribeFileRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.TranscribeFileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.TranscribeFileRequest.displayName = 'proto.ondewo.s2t.TranscribeFileRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.TranscribeFileResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ondewo.s2t.TranscribeFileResponse.repeatedFields_, null);
};
goog.inherits(proto.ondewo.s2t.TranscribeFileResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.TranscribeFileResponse.displayName = 'proto.ondewo.s2t.TranscribeFileResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.WordTiming = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.WordTiming, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.WordTiming.displayName = 'proto.ondewo.s2t.WordTiming';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.S2tPipelineId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.S2tPipelineId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.S2tPipelineId.displayName = 'proto.ondewo.s2t.S2tPipelineId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.ListS2tPipelinesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ondewo.s2t.ListS2tPipelinesRequest.repeatedFields_, null);
};
goog.inherits(proto.ondewo.s2t.ListS2tPipelinesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.ListS2tPipelinesRequest.displayName = 'proto.ondewo.s2t.ListS2tPipelinesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.ListS2tPipelinesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ondewo.s2t.ListS2tPipelinesResponse.repeatedFields_, null);
};
goog.inherits(proto.ondewo.s2t.ListS2tPipelinesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.ListS2tPipelinesResponse.displayName = 'proto.ondewo.s2t.ListS2tPipelinesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.ListS2tLanguagesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ondewo.s2t.ListS2tLanguagesRequest.repeatedFields_, null);
};
goog.inherits(proto.ondewo.s2t.ListS2tLanguagesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.ListS2tLanguagesRequest.displayName = 'proto.ondewo.s2t.ListS2tLanguagesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.ListS2tLanguagesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ondewo.s2t.ListS2tLanguagesResponse.repeatedFields_, null);
};
goog.inherits(proto.ondewo.s2t.ListS2tLanguagesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.ListS2tLanguagesResponse.displayName = 'proto.ondewo.s2t.ListS2tLanguagesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.ListS2tDomainsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ondewo.s2t.ListS2tDomainsRequest.repeatedFields_, null);
};
goog.inherits(proto.ondewo.s2t.ListS2tDomainsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.ListS2tDomainsRequest.displayName = 'proto.ondewo.s2t.ListS2tDomainsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.ListS2tDomainsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ondewo.s2t.ListS2tDomainsResponse.repeatedFields_, null);
};
goog.inherits(proto.ondewo.s2t.ListS2tDomainsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.ListS2tDomainsResponse.displayName = 'proto.ondewo.s2t.ListS2tDomainsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.Speech2TextConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.Speech2TextConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.Speech2TextConfig.displayName = 'proto.ondewo.s2t.Speech2TextConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.Description = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.Description, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.Description.displayName = 'proto.ondewo.s2t.Description';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.Inference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.Inference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.Inference.displayName = 'proto.ondewo.s2t.Inference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.CtcAcousticModels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.CtcAcousticModels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.CtcAcousticModels.displayName = 'proto.ondewo.s2t.CtcAcousticModels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.Wav2Vec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.Wav2Vec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.Wav2Vec.displayName = 'proto.ondewo.s2t.Wav2Vec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.Quartznet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.Quartznet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.Quartznet.displayName = 'proto.ondewo.s2t.Quartznet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.PtFiles = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.PtFiles, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.PtFiles.displayName = 'proto.ondewo.s2t.PtFiles';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.CkptFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.CkptFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.CkptFile.displayName = 'proto.ondewo.s2t.CkptFile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.QuartznetTriton = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.QuartznetTriton, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.QuartznetTriton.displayName = 'proto.ondewo.s2t.QuartznetTriton';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.LanguageModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.LanguageModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.LanguageModel.displayName = 'proto.ondewo.s2t.LanguageModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.StreamingServer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.StreamingServer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.StreamingServer.displayName = 'proto.ondewo.s2t.StreamingServer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.StreamingSpeechRecognition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.StreamingSpeechRecognition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.StreamingSpeechRecognition.displayName = 'proto.ondewo.s2t.StreamingSpeechRecognition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.VoiceActivityDetection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.VoiceActivityDetection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.VoiceActivityDetection.displayName = 'proto.ondewo.s2t.VoiceActivityDetection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.Pyannote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.Pyannote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.Pyannote.displayName = 'proto.ondewo.s2t.Pyannote';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.Matchbox = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.Matchbox, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.Matchbox.displayName = 'proto.ondewo.s2t.Matchbox';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.PostProcessing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ondewo.s2t.PostProcessing.repeatedFields_, null);
};
goog.inherits(proto.ondewo.s2t.PostProcessing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.PostProcessing.displayName = 'proto.ondewo.s2t.PostProcessing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.PostProcessors = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.PostProcessors, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.PostProcessors.displayName = 'proto.ondewo.s2t.PostProcessors';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.SymSpell = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.SymSpell, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.SymSpell.displayName = 'proto.ondewo.s2t.SymSpell';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.Normalization = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.Normalization, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.Normalization.displayName = 'proto.ondewo.s2t.Normalization';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ondewo.s2t.Logging = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ondewo.s2t.Logging, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ondewo.s2t.Logging.displayName = 'proto.ondewo.s2t.Logging';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.TranscribeStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.TranscribeStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.TranscribeStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.TranscribeStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    s2tPipelineId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    audioChunk: msg.getAudioChunk_asB64(),
    ctcDecoding: jspb.Message.getFieldWithDefault(msg, 3, 0),
    spellingCorrection: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    disableNormalization: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    endOfStream: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.TranscribeStreamRequest}
 */
proto.ondewo.s2t.TranscribeStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.TranscribeStreamRequest;
  return proto.ondewo.s2t.TranscribeStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.TranscribeStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.TranscribeStreamRequest}
 */
proto.ondewo.s2t.TranscribeStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setS2tPipelineId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAudioChunk(value);
      break;
    case 3:
      var value = /** @type {!proto.ondewo.s2t.CTCDecoding} */ (reader.readEnum());
      msg.setCtcDecoding(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSpellingCorrection(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableNormalization(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEndOfStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.TranscribeStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.TranscribeStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.TranscribeStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.TranscribeStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getS2tPipelineId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAudioChunk_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getCtcDecoding();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getSpellingCorrection();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getDisableNormalization();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getEndOfStream();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string s2t_pipeline_id = 1;
 * @return {string}
 */
proto.ondewo.s2t.TranscribeStreamRequest.prototype.getS2tPipelineId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.TranscribeStreamRequest} returns this
 */
proto.ondewo.s2t.TranscribeStreamRequest.prototype.setS2tPipelineId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes audio_chunk = 2;
 * @return {!(string|Uint8Array)}
 */
proto.ondewo.s2t.TranscribeStreamRequest.prototype.getAudioChunk = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes audio_chunk = 2;
 * This is a type-conversion wrapper around `getAudioChunk()`
 * @return {string}
 */
proto.ondewo.s2t.TranscribeStreamRequest.prototype.getAudioChunk_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAudioChunk()));
};


/**
 * optional bytes audio_chunk = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAudioChunk()`
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.TranscribeStreamRequest.prototype.getAudioChunk_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAudioChunk()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ondewo.s2t.TranscribeStreamRequest} returns this
 */
proto.ondewo.s2t.TranscribeStreamRequest.prototype.setAudioChunk = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional CTCDecoding ctc_decoding = 3;
 * @return {!proto.ondewo.s2t.CTCDecoding}
 */
proto.ondewo.s2t.TranscribeStreamRequest.prototype.getCtcDecoding = function() {
  return /** @type {!proto.ondewo.s2t.CTCDecoding} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ondewo.s2t.CTCDecoding} value
 * @return {!proto.ondewo.s2t.TranscribeStreamRequest} returns this
 */
proto.ondewo.s2t.TranscribeStreamRequest.prototype.setCtcDecoding = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool spelling_correction = 4;
 * @return {boolean}
 */
proto.ondewo.s2t.TranscribeStreamRequest.prototype.getSpellingCorrection = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ondewo.s2t.TranscribeStreamRequest} returns this
 */
proto.ondewo.s2t.TranscribeStreamRequest.prototype.setSpellingCorrection = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool disable_normalization = 5;
 * @return {boolean}
 */
proto.ondewo.s2t.TranscribeStreamRequest.prototype.getDisableNormalization = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ondewo.s2t.TranscribeStreamRequest} returns this
 */
proto.ondewo.s2t.TranscribeStreamRequest.prototype.setDisableNormalization = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool end_of_stream = 6;
 * @return {boolean}
 */
proto.ondewo.s2t.TranscribeStreamRequest.prototype.getEndOfStream = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ondewo.s2t.TranscribeStreamRequest} returns this
 */
proto.ondewo.s2t.TranscribeStreamRequest.prototype.setEndOfStream = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.TranscribeStreamResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.TranscribeStreamResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.TranscribeStreamResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.TranscribeStreamResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transcription: jspb.Message.getFieldWithDefault(msg, 1, ""),
    time: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    pb_final: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.TranscribeStreamResponse}
 */
proto.ondewo.s2t.TranscribeStreamResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.TranscribeStreamResponse;
  return proto.ondewo.s2t.TranscribeStreamResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.TranscribeStreamResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.TranscribeStreamResponse}
 */
proto.ondewo.s2t.TranscribeStreamResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTranscription(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTime(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFinal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.TranscribeStreamResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.TranscribeStreamResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.TranscribeStreamResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.TranscribeStreamResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTranscription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTime();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getFinal();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string transcription = 1;
 * @return {string}
 */
proto.ondewo.s2t.TranscribeStreamResponse.prototype.getTranscription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.TranscribeStreamResponse} returns this
 */
proto.ondewo.s2t.TranscribeStreamResponse.prototype.setTranscription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional float time = 2;
 * @return {number}
 */
proto.ondewo.s2t.TranscribeStreamResponse.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.TranscribeStreamResponse} returns this
 */
proto.ondewo.s2t.TranscribeStreamResponse.prototype.setTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional bool final = 3;
 * @return {boolean}
 */
proto.ondewo.s2t.TranscribeStreamResponse.prototype.getFinal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ondewo.s2t.TranscribeStreamResponse} returns this
 */
proto.ondewo.s2t.TranscribeStreamResponse.prototype.setFinal = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.TranscribeFileRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.TranscribeFileRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.TranscribeFileRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.TranscribeFileRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    s2tPipelineId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    audioFile: msg.getAudioFile_asB64(),
    ctcDecoding: jspb.Message.getFieldWithDefault(msg, 3, 0),
    spellingCorrection: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    disableNormalization: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    includeTiming: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.TranscribeFileRequest}
 */
proto.ondewo.s2t.TranscribeFileRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.TranscribeFileRequest;
  return proto.ondewo.s2t.TranscribeFileRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.TranscribeFileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.TranscribeFileRequest}
 */
proto.ondewo.s2t.TranscribeFileRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setS2tPipelineId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAudioFile(value);
      break;
    case 3:
      var value = /** @type {!proto.ondewo.s2t.CTCDecoding} */ (reader.readEnum());
      msg.setCtcDecoding(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSpellingCorrection(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableNormalization(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeTiming(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.TranscribeFileRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.TranscribeFileRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.TranscribeFileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.TranscribeFileRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getS2tPipelineId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAudioFile_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getCtcDecoding();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getSpellingCorrection();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getDisableNormalization();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIncludeTiming();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string s2t_pipeline_id = 1;
 * @return {string}
 */
proto.ondewo.s2t.TranscribeFileRequest.prototype.getS2tPipelineId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.TranscribeFileRequest} returns this
 */
proto.ondewo.s2t.TranscribeFileRequest.prototype.setS2tPipelineId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes audio_file = 2;
 * @return {!(string|Uint8Array)}
 */
proto.ondewo.s2t.TranscribeFileRequest.prototype.getAudioFile = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes audio_file = 2;
 * This is a type-conversion wrapper around `getAudioFile()`
 * @return {string}
 */
proto.ondewo.s2t.TranscribeFileRequest.prototype.getAudioFile_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAudioFile()));
};


/**
 * optional bytes audio_file = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAudioFile()`
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.TranscribeFileRequest.prototype.getAudioFile_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAudioFile()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ondewo.s2t.TranscribeFileRequest} returns this
 */
proto.ondewo.s2t.TranscribeFileRequest.prototype.setAudioFile = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional CTCDecoding ctc_decoding = 3;
 * @return {!proto.ondewo.s2t.CTCDecoding}
 */
proto.ondewo.s2t.TranscribeFileRequest.prototype.getCtcDecoding = function() {
  return /** @type {!proto.ondewo.s2t.CTCDecoding} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ondewo.s2t.CTCDecoding} value
 * @return {!proto.ondewo.s2t.TranscribeFileRequest} returns this
 */
proto.ondewo.s2t.TranscribeFileRequest.prototype.setCtcDecoding = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool spelling_correction = 4;
 * @return {boolean}
 */
proto.ondewo.s2t.TranscribeFileRequest.prototype.getSpellingCorrection = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ondewo.s2t.TranscribeFileRequest} returns this
 */
proto.ondewo.s2t.TranscribeFileRequest.prototype.setSpellingCorrection = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool disable_normalization = 5;
 * @return {boolean}
 */
proto.ondewo.s2t.TranscribeFileRequest.prototype.getDisableNormalization = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ondewo.s2t.TranscribeFileRequest} returns this
 */
proto.ondewo.s2t.TranscribeFileRequest.prototype.setDisableNormalization = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool include_timing = 6;
 * @return {boolean}
 */
proto.ondewo.s2t.TranscribeFileRequest.prototype.getIncludeTiming = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ondewo.s2t.TranscribeFileRequest} returns this
 */
proto.ondewo.s2t.TranscribeFileRequest.prototype.setIncludeTiming = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ondewo.s2t.TranscribeFileResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.TranscribeFileResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.TranscribeFileResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.TranscribeFileResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.TranscribeFileResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transcription: jspb.Message.getFieldWithDefault(msg, 1, ""),
    time: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    wordTimingList: jspb.Message.toObjectList(msg.getWordTimingList(),
    proto.ondewo.s2t.WordTiming.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.TranscribeFileResponse}
 */
proto.ondewo.s2t.TranscribeFileResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.TranscribeFileResponse;
  return proto.ondewo.s2t.TranscribeFileResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.TranscribeFileResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.TranscribeFileResponse}
 */
proto.ondewo.s2t.TranscribeFileResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTranscription(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTime(value);
      break;
    case 3:
      var value = new proto.ondewo.s2t.WordTiming;
      reader.readMessage(value,proto.ondewo.s2t.WordTiming.deserializeBinaryFromReader);
      msg.addWordTiming(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.TranscribeFileResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.TranscribeFileResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.TranscribeFileResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.TranscribeFileResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTranscription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTime();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getWordTimingList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ondewo.s2t.WordTiming.serializeBinaryToWriter
    );
  }
};


/**
 * optional string transcription = 1;
 * @return {string}
 */
proto.ondewo.s2t.TranscribeFileResponse.prototype.getTranscription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.TranscribeFileResponse} returns this
 */
proto.ondewo.s2t.TranscribeFileResponse.prototype.setTranscription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional float time = 2;
 * @return {number}
 */
proto.ondewo.s2t.TranscribeFileResponse.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.TranscribeFileResponse} returns this
 */
proto.ondewo.s2t.TranscribeFileResponse.prototype.setTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * repeated WordTiming word_timing = 3;
 * @return {!Array<!proto.ondewo.s2t.WordTiming>}
 */
proto.ondewo.s2t.TranscribeFileResponse.prototype.getWordTimingList = function() {
  return /** @type{!Array<!proto.ondewo.s2t.WordTiming>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ondewo.s2t.WordTiming, 3));
};


/**
 * @param {!Array<!proto.ondewo.s2t.WordTiming>} value
 * @return {!proto.ondewo.s2t.TranscribeFileResponse} returns this
*/
proto.ondewo.s2t.TranscribeFileResponse.prototype.setWordTimingList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ondewo.s2t.WordTiming=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ondewo.s2t.WordTiming}
 */
proto.ondewo.s2t.TranscribeFileResponse.prototype.addWordTiming = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ondewo.s2t.WordTiming, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.s2t.TranscribeFileResponse} returns this
 */
proto.ondewo.s2t.TranscribeFileResponse.prototype.clearWordTimingList = function() {
  return this.setWordTimingList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.WordTiming.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.WordTiming.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.WordTiming} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.WordTiming.toObject = function(includeInstance, msg) {
  var f, obj = {
    word: jspb.Message.getFieldWithDefault(msg, 1, ""),
    begin: jspb.Message.getFieldWithDefault(msg, 2, 0),
    end: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.WordTiming}
 */
proto.ondewo.s2t.WordTiming.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.WordTiming;
  return proto.ondewo.s2t.WordTiming.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.WordTiming} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.WordTiming}
 */
proto.ondewo.s2t.WordTiming.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWord(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBegin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.WordTiming.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.WordTiming.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.WordTiming} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.WordTiming.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWord();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBegin();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string word = 1;
 * @return {string}
 */
proto.ondewo.s2t.WordTiming.prototype.getWord = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.WordTiming} returns this
 */
proto.ondewo.s2t.WordTiming.prototype.setWord = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 begin = 2;
 * @return {number}
 */
proto.ondewo.s2t.WordTiming.prototype.getBegin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.WordTiming} returns this
 */
proto.ondewo.s2t.WordTiming.prototype.setBegin = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 end = 3;
 * @return {number}
 */
proto.ondewo.s2t.WordTiming.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.WordTiming} returns this
 */
proto.ondewo.s2t.WordTiming.prototype.setEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.S2tPipelineId.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.S2tPipelineId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.S2tPipelineId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.S2tPipelineId.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.S2tPipelineId}
 */
proto.ondewo.s2t.S2tPipelineId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.S2tPipelineId;
  return proto.ondewo.s2t.S2tPipelineId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.S2tPipelineId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.S2tPipelineId}
 */
proto.ondewo.s2t.S2tPipelineId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.S2tPipelineId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.S2tPipelineId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.S2tPipelineId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.S2tPipelineId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ondewo.s2t.S2tPipelineId.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.S2tPipelineId} returns this
 */
proto.ondewo.s2t.S2tPipelineId.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.ListS2tPipelinesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.ListS2tPipelinesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    languagesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    pipelineOwnersList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    domainsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.ListS2tPipelinesRequest}
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.ListS2tPipelinesRequest;
  return proto.ondewo.s2t.ListS2tPipelinesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.ListS2tPipelinesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.ListS2tPipelinesRequest}
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addLanguages(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPipelineOwners(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addDomains(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.ListS2tPipelinesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.ListS2tPipelinesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLanguagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getPipelineOwnersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getDomainsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * repeated string languages = 1;
 * @return {!Array<string>}
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.prototype.getLanguagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ondewo.s2t.ListS2tPipelinesRequest} returns this
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.prototype.setLanguagesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ondewo.s2t.ListS2tPipelinesRequest} returns this
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.prototype.addLanguages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.s2t.ListS2tPipelinesRequest} returns this
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.prototype.clearLanguagesList = function() {
  return this.setLanguagesList([]);
};


/**
 * repeated string pipeline_owners = 2;
 * @return {!Array<string>}
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.prototype.getPipelineOwnersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ondewo.s2t.ListS2tPipelinesRequest} returns this
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.prototype.setPipelineOwnersList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ondewo.s2t.ListS2tPipelinesRequest} returns this
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.prototype.addPipelineOwners = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.s2t.ListS2tPipelinesRequest} returns this
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.prototype.clearPipelineOwnersList = function() {
  return this.setPipelineOwnersList([]);
};


/**
 * repeated string domains = 3;
 * @return {!Array<string>}
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.prototype.getDomainsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ondewo.s2t.ListS2tPipelinesRequest} returns this
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.prototype.setDomainsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ondewo.s2t.ListS2tPipelinesRequest} returns this
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.prototype.addDomains = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.s2t.ListS2tPipelinesRequest} returns this
 */
proto.ondewo.s2t.ListS2tPipelinesRequest.prototype.clearDomainsList = function() {
  return this.setDomainsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ondewo.s2t.ListS2tPipelinesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.ListS2tPipelinesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.ListS2tPipelinesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.ListS2tPipelinesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.ListS2tPipelinesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pipelineConfigsList: jspb.Message.toObjectList(msg.getPipelineConfigsList(),
    proto.ondewo.s2t.Speech2TextConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.ListS2tPipelinesResponse}
 */
proto.ondewo.s2t.ListS2tPipelinesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.ListS2tPipelinesResponse;
  return proto.ondewo.s2t.ListS2tPipelinesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.ListS2tPipelinesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.ListS2tPipelinesResponse}
 */
proto.ondewo.s2t.ListS2tPipelinesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ondewo.s2t.Speech2TextConfig;
      reader.readMessage(value,proto.ondewo.s2t.Speech2TextConfig.deserializeBinaryFromReader);
      msg.addPipelineConfigs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.ListS2tPipelinesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.ListS2tPipelinesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.ListS2tPipelinesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.ListS2tPipelinesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPipelineConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ondewo.s2t.Speech2TextConfig.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Speech2TextConfig pipeline_configs = 1;
 * @return {!Array<!proto.ondewo.s2t.Speech2TextConfig>}
 */
proto.ondewo.s2t.ListS2tPipelinesResponse.prototype.getPipelineConfigsList = function() {
  return /** @type{!Array<!proto.ondewo.s2t.Speech2TextConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ondewo.s2t.Speech2TextConfig, 1));
};


/**
 * @param {!Array<!proto.ondewo.s2t.Speech2TextConfig>} value
 * @return {!proto.ondewo.s2t.ListS2tPipelinesResponse} returns this
*/
proto.ondewo.s2t.ListS2tPipelinesResponse.prototype.setPipelineConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ondewo.s2t.Speech2TextConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ondewo.s2t.Speech2TextConfig}
 */
proto.ondewo.s2t.ListS2tPipelinesResponse.prototype.addPipelineConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ondewo.s2t.Speech2TextConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.s2t.ListS2tPipelinesResponse} returns this
 */
proto.ondewo.s2t.ListS2tPipelinesResponse.prototype.clearPipelineConfigsList = function() {
  return this.setPipelineConfigsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ondewo.s2t.ListS2tLanguagesRequest.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.ListS2tLanguagesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.ListS2tLanguagesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.ListS2tLanguagesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.ListS2tLanguagesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    domainsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    pipelineOwnersList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.ListS2tLanguagesRequest}
 */
proto.ondewo.s2t.ListS2tLanguagesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.ListS2tLanguagesRequest;
  return proto.ondewo.s2t.ListS2tLanguagesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.ListS2tLanguagesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.ListS2tLanguagesRequest}
 */
proto.ondewo.s2t.ListS2tLanguagesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addDomains(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPipelineOwners(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.ListS2tLanguagesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.ListS2tLanguagesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.ListS2tLanguagesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.ListS2tLanguagesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDomainsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getPipelineOwnersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string domains = 1;
 * @return {!Array<string>}
 */
proto.ondewo.s2t.ListS2tLanguagesRequest.prototype.getDomainsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ondewo.s2t.ListS2tLanguagesRequest} returns this
 */
proto.ondewo.s2t.ListS2tLanguagesRequest.prototype.setDomainsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ondewo.s2t.ListS2tLanguagesRequest} returns this
 */
proto.ondewo.s2t.ListS2tLanguagesRequest.prototype.addDomains = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.s2t.ListS2tLanguagesRequest} returns this
 */
proto.ondewo.s2t.ListS2tLanguagesRequest.prototype.clearDomainsList = function() {
  return this.setDomainsList([]);
};


/**
 * repeated string pipeline_owners = 2;
 * @return {!Array<string>}
 */
proto.ondewo.s2t.ListS2tLanguagesRequest.prototype.getPipelineOwnersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ondewo.s2t.ListS2tLanguagesRequest} returns this
 */
proto.ondewo.s2t.ListS2tLanguagesRequest.prototype.setPipelineOwnersList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ondewo.s2t.ListS2tLanguagesRequest} returns this
 */
proto.ondewo.s2t.ListS2tLanguagesRequest.prototype.addPipelineOwners = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.s2t.ListS2tLanguagesRequest} returns this
 */
proto.ondewo.s2t.ListS2tLanguagesRequest.prototype.clearPipelineOwnersList = function() {
  return this.setPipelineOwnersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ondewo.s2t.ListS2tLanguagesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.ListS2tLanguagesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.ListS2tLanguagesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.ListS2tLanguagesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.ListS2tLanguagesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    languagesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.ListS2tLanguagesResponse}
 */
proto.ondewo.s2t.ListS2tLanguagesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.ListS2tLanguagesResponse;
  return proto.ondewo.s2t.ListS2tLanguagesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.ListS2tLanguagesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.ListS2tLanguagesResponse}
 */
proto.ondewo.s2t.ListS2tLanguagesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addLanguages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.ListS2tLanguagesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.ListS2tLanguagesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.ListS2tLanguagesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.ListS2tLanguagesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLanguagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string languages = 1;
 * @return {!Array<string>}
 */
proto.ondewo.s2t.ListS2tLanguagesResponse.prototype.getLanguagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ondewo.s2t.ListS2tLanguagesResponse} returns this
 */
proto.ondewo.s2t.ListS2tLanguagesResponse.prototype.setLanguagesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ondewo.s2t.ListS2tLanguagesResponse} returns this
 */
proto.ondewo.s2t.ListS2tLanguagesResponse.prototype.addLanguages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.s2t.ListS2tLanguagesResponse} returns this
 */
proto.ondewo.s2t.ListS2tLanguagesResponse.prototype.clearLanguagesList = function() {
  return this.setLanguagesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ondewo.s2t.ListS2tDomainsRequest.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.ListS2tDomainsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.ListS2tDomainsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.ListS2tDomainsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.ListS2tDomainsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    languagesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    pipelineOwnersList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.ListS2tDomainsRequest}
 */
proto.ondewo.s2t.ListS2tDomainsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.ListS2tDomainsRequest;
  return proto.ondewo.s2t.ListS2tDomainsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.ListS2tDomainsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.ListS2tDomainsRequest}
 */
proto.ondewo.s2t.ListS2tDomainsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addLanguages(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPipelineOwners(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.ListS2tDomainsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.ListS2tDomainsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.ListS2tDomainsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.ListS2tDomainsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLanguagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getPipelineOwnersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string languages = 1;
 * @return {!Array<string>}
 */
proto.ondewo.s2t.ListS2tDomainsRequest.prototype.getLanguagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ondewo.s2t.ListS2tDomainsRequest} returns this
 */
proto.ondewo.s2t.ListS2tDomainsRequest.prototype.setLanguagesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ondewo.s2t.ListS2tDomainsRequest} returns this
 */
proto.ondewo.s2t.ListS2tDomainsRequest.prototype.addLanguages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.s2t.ListS2tDomainsRequest} returns this
 */
proto.ondewo.s2t.ListS2tDomainsRequest.prototype.clearLanguagesList = function() {
  return this.setLanguagesList([]);
};


/**
 * repeated string pipeline_owners = 2;
 * @return {!Array<string>}
 */
proto.ondewo.s2t.ListS2tDomainsRequest.prototype.getPipelineOwnersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ondewo.s2t.ListS2tDomainsRequest} returns this
 */
proto.ondewo.s2t.ListS2tDomainsRequest.prototype.setPipelineOwnersList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ondewo.s2t.ListS2tDomainsRequest} returns this
 */
proto.ondewo.s2t.ListS2tDomainsRequest.prototype.addPipelineOwners = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.s2t.ListS2tDomainsRequest} returns this
 */
proto.ondewo.s2t.ListS2tDomainsRequest.prototype.clearPipelineOwnersList = function() {
  return this.setPipelineOwnersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ondewo.s2t.ListS2tDomainsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.ListS2tDomainsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.ListS2tDomainsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.ListS2tDomainsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.ListS2tDomainsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    domainsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.ListS2tDomainsResponse}
 */
proto.ondewo.s2t.ListS2tDomainsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.ListS2tDomainsResponse;
  return proto.ondewo.s2t.ListS2tDomainsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.ListS2tDomainsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.ListS2tDomainsResponse}
 */
proto.ondewo.s2t.ListS2tDomainsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addDomains(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.ListS2tDomainsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.ListS2tDomainsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.ListS2tDomainsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.ListS2tDomainsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDomainsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string domains = 1;
 * @return {!Array<string>}
 */
proto.ondewo.s2t.ListS2tDomainsResponse.prototype.getDomainsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ondewo.s2t.ListS2tDomainsResponse} returns this
 */
proto.ondewo.s2t.ListS2tDomainsResponse.prototype.setDomainsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ondewo.s2t.ListS2tDomainsResponse} returns this
 */
proto.ondewo.s2t.ListS2tDomainsResponse.prototype.addDomains = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.s2t.ListS2tDomainsResponse} returns this
 */
proto.ondewo.s2t.ListS2tDomainsResponse.prototype.clearDomainsList = function() {
  return this.setDomainsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.Speech2TextConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.Speech2TextConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Speech2TextConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: (f = msg.getDescription()) && proto.ondewo.s2t.Description.toObject(includeInstance, f),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    inference: (f = msg.getInference()) && proto.ondewo.s2t.Inference.toObject(includeInstance, f),
    streamingServer: (f = msg.getStreamingServer()) && proto.ondewo.s2t.StreamingServer.toObject(includeInstance, f),
    voiceActivityDetection: (f = msg.getVoiceActivityDetection()) && proto.ondewo.s2t.VoiceActivityDetection.toObject(includeInstance, f),
    postProcessing: (f = msg.getPostProcessing()) && proto.ondewo.s2t.PostProcessing.toObject(includeInstance, f),
    logging: (f = msg.getLogging()) && proto.ondewo.s2t.Logging.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.Speech2TextConfig}
 */
proto.ondewo.s2t.Speech2TextConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.Speech2TextConfig;
  return proto.ondewo.s2t.Speech2TextConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.Speech2TextConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.Speech2TextConfig}
 */
proto.ondewo.s2t.Speech2TextConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.ondewo.s2t.Description;
      reader.readMessage(value,proto.ondewo.s2t.Description.deserializeBinaryFromReader);
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 4:
      var value = new proto.ondewo.s2t.Inference;
      reader.readMessage(value,proto.ondewo.s2t.Inference.deserializeBinaryFromReader);
      msg.setInference(value);
      break;
    case 5:
      var value = new proto.ondewo.s2t.StreamingServer;
      reader.readMessage(value,proto.ondewo.s2t.StreamingServer.deserializeBinaryFromReader);
      msg.setStreamingServer(value);
      break;
    case 6:
      var value = new proto.ondewo.s2t.VoiceActivityDetection;
      reader.readMessage(value,proto.ondewo.s2t.VoiceActivityDetection.deserializeBinaryFromReader);
      msg.setVoiceActivityDetection(value);
      break;
    case 7:
      var value = new proto.ondewo.s2t.PostProcessing;
      reader.readMessage(value,proto.ondewo.s2t.PostProcessing.deserializeBinaryFromReader);
      msg.setPostProcessing(value);
      break;
    case 8:
      var value = new proto.ondewo.s2t.Logging;
      reader.readMessage(value,proto.ondewo.s2t.Logging.deserializeBinaryFromReader);
      msg.setLogging(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.Speech2TextConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.Speech2TextConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Speech2TextConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ondewo.s2t.Description.serializeBinaryToWriter
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getInference();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ondewo.s2t.Inference.serializeBinaryToWriter
    );
  }
  f = message.getStreamingServer();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ondewo.s2t.StreamingServer.serializeBinaryToWriter
    );
  }
  f = message.getVoiceActivityDetection();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ondewo.s2t.VoiceActivityDetection.serializeBinaryToWriter
    );
  }
  f = message.getPostProcessing();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ondewo.s2t.PostProcessing.serializeBinaryToWriter
    );
  }
  f = message.getLogging();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ondewo.s2t.Logging.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.Speech2TextConfig} returns this
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Description description = 2;
 * @return {?proto.ondewo.s2t.Description}
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.getDescription = function() {
  return /** @type{?proto.ondewo.s2t.Description} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.Description, 2));
};


/**
 * @param {?proto.ondewo.s2t.Description|undefined} value
 * @return {!proto.ondewo.s2t.Speech2TextConfig} returns this
*/
proto.ondewo.s2t.Speech2TextConfig.prototype.setDescription = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.Speech2TextConfig} returns this
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.clearDescription = function() {
  return this.setDescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool active = 3;
 * @return {boolean}
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ondewo.s2t.Speech2TextConfig} returns this
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional Inference inference = 4;
 * @return {?proto.ondewo.s2t.Inference}
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.getInference = function() {
  return /** @type{?proto.ondewo.s2t.Inference} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.Inference, 4));
};


/**
 * @param {?proto.ondewo.s2t.Inference|undefined} value
 * @return {!proto.ondewo.s2t.Speech2TextConfig} returns this
*/
proto.ondewo.s2t.Speech2TextConfig.prototype.setInference = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.Speech2TextConfig} returns this
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.clearInference = function() {
  return this.setInference(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.hasInference = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StreamingServer streaming_server = 5;
 * @return {?proto.ondewo.s2t.StreamingServer}
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.getStreamingServer = function() {
  return /** @type{?proto.ondewo.s2t.StreamingServer} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.StreamingServer, 5));
};


/**
 * @param {?proto.ondewo.s2t.StreamingServer|undefined} value
 * @return {!proto.ondewo.s2t.Speech2TextConfig} returns this
*/
proto.ondewo.s2t.Speech2TextConfig.prototype.setStreamingServer = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.Speech2TextConfig} returns this
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.clearStreamingServer = function() {
  return this.setStreamingServer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.hasStreamingServer = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional VoiceActivityDetection voice_activity_detection = 6;
 * @return {?proto.ondewo.s2t.VoiceActivityDetection}
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.getVoiceActivityDetection = function() {
  return /** @type{?proto.ondewo.s2t.VoiceActivityDetection} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.VoiceActivityDetection, 6));
};


/**
 * @param {?proto.ondewo.s2t.VoiceActivityDetection|undefined} value
 * @return {!proto.ondewo.s2t.Speech2TextConfig} returns this
*/
proto.ondewo.s2t.Speech2TextConfig.prototype.setVoiceActivityDetection = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.Speech2TextConfig} returns this
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.clearVoiceActivityDetection = function() {
  return this.setVoiceActivityDetection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.hasVoiceActivityDetection = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PostProcessing post_processing = 7;
 * @return {?proto.ondewo.s2t.PostProcessing}
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.getPostProcessing = function() {
  return /** @type{?proto.ondewo.s2t.PostProcessing} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.PostProcessing, 7));
};


/**
 * @param {?proto.ondewo.s2t.PostProcessing|undefined} value
 * @return {!proto.ondewo.s2t.Speech2TextConfig} returns this
*/
proto.ondewo.s2t.Speech2TextConfig.prototype.setPostProcessing = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.Speech2TextConfig} returns this
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.clearPostProcessing = function() {
  return this.setPostProcessing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.hasPostProcessing = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Logging logging = 8;
 * @return {?proto.ondewo.s2t.Logging}
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.getLogging = function() {
  return /** @type{?proto.ondewo.s2t.Logging} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.Logging, 8));
};


/**
 * @param {?proto.ondewo.s2t.Logging|undefined} value
 * @return {!proto.ondewo.s2t.Speech2TextConfig} returns this
*/
proto.ondewo.s2t.Speech2TextConfig.prototype.setLogging = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.Speech2TextConfig} returns this
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.clearLogging = function() {
  return this.setLogging(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.Speech2TextConfig.prototype.hasLogging = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.Description.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.Description.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.Description} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Description.toObject = function(includeInstance, msg) {
  var f, obj = {
    language: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pipelineOwner: jspb.Message.getFieldWithDefault(msg, 2, ""),
    domain: jspb.Message.getFieldWithDefault(msg, 3, ""),
    comments: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.Description}
 */
proto.ondewo.s2t.Description.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.Description;
  return proto.ondewo.s2t.Description.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.Description} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.Description}
 */
proto.ondewo.s2t.Description.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPipelineOwner(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setComments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.Description.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.Description.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.Description} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Description.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPipelineOwner();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getComments();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string language = 1;
 * @return {string}
 */
proto.ondewo.s2t.Description.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.Description} returns this
 */
proto.ondewo.s2t.Description.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string pipeline_owner = 2;
 * @return {string}
 */
proto.ondewo.s2t.Description.prototype.getPipelineOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.Description} returns this
 */
proto.ondewo.s2t.Description.prototype.setPipelineOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string domain = 3;
 * @return {string}
 */
proto.ondewo.s2t.Description.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.Description} returns this
 */
proto.ondewo.s2t.Description.prototype.setDomain = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string comments = 4;
 * @return {string}
 */
proto.ondewo.s2t.Description.prototype.getComments = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.Description} returns this
 */
proto.ondewo.s2t.Description.prototype.setComments = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.Inference.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.Inference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.Inference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Inference.toObject = function(includeInstance, msg) {
  var f, obj = {
    ctcAcousticModels: (f = msg.getCtcAcousticModels()) && proto.ondewo.s2t.CtcAcousticModels.toObject(includeInstance, f),
    languageModel: (f = msg.getLanguageModel()) && proto.ondewo.s2t.LanguageModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.Inference}
 */
proto.ondewo.s2t.Inference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.Inference;
  return proto.ondewo.s2t.Inference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.Inference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.Inference}
 */
proto.ondewo.s2t.Inference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ondewo.s2t.CtcAcousticModels;
      reader.readMessage(value,proto.ondewo.s2t.CtcAcousticModels.deserializeBinaryFromReader);
      msg.setCtcAcousticModels(value);
      break;
    case 2:
      var value = new proto.ondewo.s2t.LanguageModel;
      reader.readMessage(value,proto.ondewo.s2t.LanguageModel.deserializeBinaryFromReader);
      msg.setLanguageModel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.Inference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.Inference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.Inference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Inference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCtcAcousticModels();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ondewo.s2t.CtcAcousticModels.serializeBinaryToWriter
    );
  }
  f = message.getLanguageModel();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ondewo.s2t.LanguageModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional CtcAcousticModels ctc_acoustic_models = 1;
 * @return {?proto.ondewo.s2t.CtcAcousticModels}
 */
proto.ondewo.s2t.Inference.prototype.getCtcAcousticModels = function() {
  return /** @type{?proto.ondewo.s2t.CtcAcousticModels} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.CtcAcousticModels, 1));
};


/**
 * @param {?proto.ondewo.s2t.CtcAcousticModels|undefined} value
 * @return {!proto.ondewo.s2t.Inference} returns this
*/
proto.ondewo.s2t.Inference.prototype.setCtcAcousticModels = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.Inference} returns this
 */
proto.ondewo.s2t.Inference.prototype.clearCtcAcousticModels = function() {
  return this.setCtcAcousticModels(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.Inference.prototype.hasCtcAcousticModels = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LanguageModel language_model = 2;
 * @return {?proto.ondewo.s2t.LanguageModel}
 */
proto.ondewo.s2t.Inference.prototype.getLanguageModel = function() {
  return /** @type{?proto.ondewo.s2t.LanguageModel} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.LanguageModel, 2));
};


/**
 * @param {?proto.ondewo.s2t.LanguageModel|undefined} value
 * @return {!proto.ondewo.s2t.Inference} returns this
*/
proto.ondewo.s2t.Inference.prototype.setLanguageModel = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.Inference} returns this
 */
proto.ondewo.s2t.Inference.prototype.clearLanguageModel = function() {
  return this.setLanguageModel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.Inference.prototype.hasLanguageModel = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.CtcAcousticModels.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.CtcAcousticModels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.CtcAcousticModels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.CtcAcousticModels.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    quartznet: (f = msg.getQuartznet()) && proto.ondewo.s2t.Quartznet.toObject(includeInstance, f),
    quartznetTriton: (f = msg.getQuartznetTriton()) && proto.ondewo.s2t.QuartznetTriton.toObject(includeInstance, f),
    wav2vec: (f = msg.getWav2vec()) && proto.ondewo.s2t.Wav2Vec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.CtcAcousticModels}
 */
proto.ondewo.s2t.CtcAcousticModels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.CtcAcousticModels;
  return proto.ondewo.s2t.CtcAcousticModels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.CtcAcousticModels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.CtcAcousticModels}
 */
proto.ondewo.s2t.CtcAcousticModels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.ondewo.s2t.Quartznet;
      reader.readMessage(value,proto.ondewo.s2t.Quartznet.deserializeBinaryFromReader);
      msg.setQuartznet(value);
      break;
    case 3:
      var value = new proto.ondewo.s2t.QuartznetTriton;
      reader.readMessage(value,proto.ondewo.s2t.QuartznetTriton.deserializeBinaryFromReader);
      msg.setQuartznetTriton(value);
      break;
    case 4:
      var value = new proto.ondewo.s2t.Wav2Vec;
      reader.readMessage(value,proto.ondewo.s2t.Wav2Vec.deserializeBinaryFromReader);
      msg.setWav2vec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.CtcAcousticModels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.CtcAcousticModels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.CtcAcousticModels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.CtcAcousticModels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuartznet();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ondewo.s2t.Quartznet.serializeBinaryToWriter
    );
  }
  f = message.getQuartznetTriton();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ondewo.s2t.QuartznetTriton.serializeBinaryToWriter
    );
  }
  f = message.getWav2vec();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ondewo.s2t.Wav2Vec.serializeBinaryToWriter
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.ondewo.s2t.CtcAcousticModels.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.CtcAcousticModels} returns this
 */
proto.ondewo.s2t.CtcAcousticModels.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Quartznet quartznet = 2;
 * @return {?proto.ondewo.s2t.Quartznet}
 */
proto.ondewo.s2t.CtcAcousticModels.prototype.getQuartznet = function() {
  return /** @type{?proto.ondewo.s2t.Quartznet} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.Quartznet, 2));
};


/**
 * @param {?proto.ondewo.s2t.Quartznet|undefined} value
 * @return {!proto.ondewo.s2t.CtcAcousticModels} returns this
*/
proto.ondewo.s2t.CtcAcousticModels.prototype.setQuartznet = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.CtcAcousticModels} returns this
 */
proto.ondewo.s2t.CtcAcousticModels.prototype.clearQuartznet = function() {
  return this.setQuartznet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.CtcAcousticModels.prototype.hasQuartznet = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional QuartznetTriton quartznet_triton = 3;
 * @return {?proto.ondewo.s2t.QuartznetTriton}
 */
proto.ondewo.s2t.CtcAcousticModels.prototype.getQuartznetTriton = function() {
  return /** @type{?proto.ondewo.s2t.QuartznetTriton} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.QuartznetTriton, 3));
};


/**
 * @param {?proto.ondewo.s2t.QuartznetTriton|undefined} value
 * @return {!proto.ondewo.s2t.CtcAcousticModels} returns this
*/
proto.ondewo.s2t.CtcAcousticModels.prototype.setQuartznetTriton = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.CtcAcousticModels} returns this
 */
proto.ondewo.s2t.CtcAcousticModels.prototype.clearQuartznetTriton = function() {
  return this.setQuartznetTriton(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.CtcAcousticModels.prototype.hasQuartznetTriton = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Wav2Vec wav2vec = 4;
 * @return {?proto.ondewo.s2t.Wav2Vec}
 */
proto.ondewo.s2t.CtcAcousticModels.prototype.getWav2vec = function() {
  return /** @type{?proto.ondewo.s2t.Wav2Vec} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.Wav2Vec, 4));
};


/**
 * @param {?proto.ondewo.s2t.Wav2Vec|undefined} value
 * @return {!proto.ondewo.s2t.CtcAcousticModels} returns this
*/
proto.ondewo.s2t.CtcAcousticModels.prototype.setWav2vec = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.CtcAcousticModels} returns this
 */
proto.ondewo.s2t.CtcAcousticModels.prototype.clearWav2vec = function() {
  return this.setWav2vec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.CtcAcousticModels.prototype.hasWav2vec = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.Wav2Vec.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.Wav2Vec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.Wav2Vec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Wav2Vec.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelPath: jspb.Message.getFieldWithDefault(msg, 1, ""),
    useGpu: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.Wav2Vec}
 */
proto.ondewo.s2t.Wav2Vec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.Wav2Vec;
  return proto.ondewo.s2t.Wav2Vec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.Wav2Vec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.Wav2Vec}
 */
proto.ondewo.s2t.Wav2Vec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelPath(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseGpu(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.Wav2Vec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.Wav2Vec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.Wav2Vec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Wav2Vec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUseGpu();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string model_path = 1;
 * @return {string}
 */
proto.ondewo.s2t.Wav2Vec.prototype.getModelPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.Wav2Vec} returns this
 */
proto.ondewo.s2t.Wav2Vec.prototype.setModelPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool use_gpu = 2;
 * @return {boolean}
 */
proto.ondewo.s2t.Wav2Vec.prototype.getUseGpu = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ondewo.s2t.Wav2Vec} returns this
 */
proto.ondewo.s2t.Wav2Vec.prototype.setUseGpu = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.Quartznet.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.Quartznet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.Quartznet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Quartznet.toObject = function(includeInstance, msg) {
  var f, obj = {
    configPath: jspb.Message.getFieldWithDefault(msg, 1, ""),
    loadType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ptFiles: (f = msg.getPtFiles()) && proto.ondewo.s2t.PtFiles.toObject(includeInstance, f),
    ckptFile: (f = msg.getCkptFile()) && proto.ondewo.s2t.CkptFile.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.Quartznet}
 */
proto.ondewo.s2t.Quartznet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.Quartznet;
  return proto.ondewo.s2t.Quartznet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.Quartznet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.Quartznet}
 */
proto.ondewo.s2t.Quartznet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfigPath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoadType(value);
      break;
    case 3:
      var value = new proto.ondewo.s2t.PtFiles;
      reader.readMessage(value,proto.ondewo.s2t.PtFiles.deserializeBinaryFromReader);
      msg.setPtFiles(value);
      break;
    case 4:
      var value = new proto.ondewo.s2t.CkptFile;
      reader.readMessage(value,proto.ondewo.s2t.CkptFile.deserializeBinaryFromReader);
      msg.setCkptFile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.Quartznet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.Quartznet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.Quartznet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Quartznet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfigPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLoadType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPtFiles();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ondewo.s2t.PtFiles.serializeBinaryToWriter
    );
  }
  f = message.getCkptFile();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ondewo.s2t.CkptFile.serializeBinaryToWriter
    );
  }
};


/**
 * optional string config_path = 1;
 * @return {string}
 */
proto.ondewo.s2t.Quartznet.prototype.getConfigPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.Quartznet} returns this
 */
proto.ondewo.s2t.Quartznet.prototype.setConfigPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string load_type = 2;
 * @return {string}
 */
proto.ondewo.s2t.Quartznet.prototype.getLoadType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.Quartznet} returns this
 */
proto.ondewo.s2t.Quartznet.prototype.setLoadType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PtFiles pt_files = 3;
 * @return {?proto.ondewo.s2t.PtFiles}
 */
proto.ondewo.s2t.Quartznet.prototype.getPtFiles = function() {
  return /** @type{?proto.ondewo.s2t.PtFiles} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.PtFiles, 3));
};


/**
 * @param {?proto.ondewo.s2t.PtFiles|undefined} value
 * @return {!proto.ondewo.s2t.Quartznet} returns this
*/
proto.ondewo.s2t.Quartznet.prototype.setPtFiles = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.Quartznet} returns this
 */
proto.ondewo.s2t.Quartznet.prototype.clearPtFiles = function() {
  return this.setPtFiles(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.Quartznet.prototype.hasPtFiles = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CkptFile ckpt_file = 4;
 * @return {?proto.ondewo.s2t.CkptFile}
 */
proto.ondewo.s2t.Quartznet.prototype.getCkptFile = function() {
  return /** @type{?proto.ondewo.s2t.CkptFile} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.CkptFile, 4));
};


/**
 * @param {?proto.ondewo.s2t.CkptFile|undefined} value
 * @return {!proto.ondewo.s2t.Quartznet} returns this
*/
proto.ondewo.s2t.Quartznet.prototype.setCkptFile = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.Quartznet} returns this
 */
proto.ondewo.s2t.Quartznet.prototype.clearCkptFile = function() {
  return this.setCkptFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.Quartznet.prototype.hasCkptFile = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.PtFiles.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.PtFiles.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.PtFiles} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.PtFiles.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, ""),
    step: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.PtFiles}
 */
proto.ondewo.s2t.PtFiles.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.PtFiles;
  return proto.ondewo.s2t.PtFiles.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.PtFiles} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.PtFiles}
 */
proto.ondewo.s2t.PtFiles.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStep(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.PtFiles.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.PtFiles.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.PtFiles} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.PtFiles.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStep();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.ondewo.s2t.PtFiles.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.PtFiles} returns this
 */
proto.ondewo.s2t.PtFiles.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string step = 2;
 * @return {string}
 */
proto.ondewo.s2t.PtFiles.prototype.getStep = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.PtFiles} returns this
 */
proto.ondewo.s2t.PtFiles.prototype.setStep = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.CkptFile.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.CkptFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.CkptFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.CkptFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.CkptFile}
 */
proto.ondewo.s2t.CkptFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.CkptFile;
  return proto.ondewo.s2t.CkptFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.CkptFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.CkptFile}
 */
proto.ondewo.s2t.CkptFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.CkptFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.CkptFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.CkptFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.CkptFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.ondewo.s2t.CkptFile.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.CkptFile} returns this
 */
proto.ondewo.s2t.CkptFile.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.QuartznetTriton.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.QuartznetTriton.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.QuartznetTriton} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.QuartznetTriton.toObject = function(includeInstance, msg) {
  var f, obj = {
    configPath: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tritonUrl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tritonModel: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.QuartznetTriton}
 */
proto.ondewo.s2t.QuartznetTriton.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.QuartznetTriton;
  return proto.ondewo.s2t.QuartznetTriton.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.QuartznetTriton} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.QuartznetTriton}
 */
proto.ondewo.s2t.QuartznetTriton.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfigPath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTritonUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTritonModel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.QuartznetTriton.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.QuartznetTriton.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.QuartznetTriton} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.QuartznetTriton.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfigPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTritonUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTritonModel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string config_path = 1;
 * @return {string}
 */
proto.ondewo.s2t.QuartznetTriton.prototype.getConfigPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.QuartznetTriton} returns this
 */
proto.ondewo.s2t.QuartznetTriton.prototype.setConfigPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string triton_url = 2;
 * @return {string}
 */
proto.ondewo.s2t.QuartznetTriton.prototype.getTritonUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.QuartznetTriton} returns this
 */
proto.ondewo.s2t.QuartznetTriton.prototype.setTritonUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string triton_model = 3;
 * @return {string}
 */
proto.ondewo.s2t.QuartznetTriton.prototype.getTritonModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.QuartznetTriton} returns this
 */
proto.ondewo.s2t.QuartznetTriton.prototype.setTritonModel = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.LanguageModel.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.LanguageModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.LanguageModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.LanguageModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, ""),
    beamSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    beamSearchScorerAlpha: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    beamSearchScorerBeta: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.LanguageModel}
 */
proto.ondewo.s2t.LanguageModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.LanguageModel;
  return proto.ondewo.s2t.LanguageModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.LanguageModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.LanguageModel}
 */
proto.ondewo.s2t.LanguageModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBeamSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBeamSearchScorerAlpha(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBeamSearchScorerBeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.LanguageModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.LanguageModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.LanguageModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.LanguageModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBeamSize();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getBeamSearchScorerAlpha();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getBeamSearchScorerBeta();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.ondewo.s2t.LanguageModel.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.LanguageModel} returns this
 */
proto.ondewo.s2t.LanguageModel.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 beam_size = 2;
 * @return {number}
 */
proto.ondewo.s2t.LanguageModel.prototype.getBeamSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.LanguageModel} returns this
 */
proto.ondewo.s2t.LanguageModel.prototype.setBeamSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional float beam_search_scorer_alpha = 3;
 * @return {number}
 */
proto.ondewo.s2t.LanguageModel.prototype.getBeamSearchScorerAlpha = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.LanguageModel} returns this
 */
proto.ondewo.s2t.LanguageModel.prototype.setBeamSearchScorerAlpha = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float beam_search_scorer_beta = 4;
 * @return {number}
 */
proto.ondewo.s2t.LanguageModel.prototype.getBeamSearchScorerBeta = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.LanguageModel} returns this
 */
proto.ondewo.s2t.LanguageModel.prototype.setBeamSearchScorerBeta = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.StreamingServer.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.StreamingServer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.StreamingServer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.StreamingServer.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: jspb.Message.getFieldWithDefault(msg, 1, ""),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0),
    outputStyle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    streamingSpeechRecognition: (f = msg.getStreamingSpeechRecognition()) && proto.ondewo.s2t.StreamingSpeechRecognition.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.StreamingServer}
 */
proto.ondewo.s2t.StreamingServer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.StreamingServer;
  return proto.ondewo.s2t.StreamingServer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.StreamingServer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.StreamingServer}
 */
proto.ondewo.s2t.StreamingServer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputStyle(value);
      break;
    case 4:
      var value = new proto.ondewo.s2t.StreamingSpeechRecognition;
      reader.readMessage(value,proto.ondewo.s2t.StreamingSpeechRecognition.deserializeBinaryFromReader);
      msg.setStreamingSpeechRecognition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.StreamingServer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.StreamingServer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.StreamingServer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.StreamingServer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getOutputStyle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStreamingSpeechRecognition();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ondewo.s2t.StreamingSpeechRecognition.serializeBinaryToWriter
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.ondewo.s2t.StreamingServer.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.StreamingServer} returns this
 */
proto.ondewo.s2t.StreamingServer.prototype.setHost = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 port = 2;
 * @return {number}
 */
proto.ondewo.s2t.StreamingServer.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.StreamingServer} returns this
 */
proto.ondewo.s2t.StreamingServer.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string output_style = 3;
 * @return {string}
 */
proto.ondewo.s2t.StreamingServer.prototype.getOutputStyle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.StreamingServer} returns this
 */
proto.ondewo.s2t.StreamingServer.prototype.setOutputStyle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional StreamingSpeechRecognition streaming_speech_recognition = 4;
 * @return {?proto.ondewo.s2t.StreamingSpeechRecognition}
 */
proto.ondewo.s2t.StreamingServer.prototype.getStreamingSpeechRecognition = function() {
  return /** @type{?proto.ondewo.s2t.StreamingSpeechRecognition} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.StreamingSpeechRecognition, 4));
};


/**
 * @param {?proto.ondewo.s2t.StreamingSpeechRecognition|undefined} value
 * @return {!proto.ondewo.s2t.StreamingServer} returns this
*/
proto.ondewo.s2t.StreamingServer.prototype.setStreamingSpeechRecognition = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.StreamingServer} returns this
 */
proto.ondewo.s2t.StreamingServer.prototype.clearStreamingSpeechRecognition = function() {
  return this.setStreamingSpeechRecognition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.StreamingServer.prototype.hasStreamingSpeechRecognition = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.StreamingSpeechRecognition.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.StreamingSpeechRecognition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.StreamingSpeechRecognition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.StreamingSpeechRecognition.toObject = function(includeInstance, msg) {
  var f, obj = {
    transcribeNotFinal: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    ctcDecodingMethod: jspb.Message.getFieldWithDefault(msg, 2, ""),
    samplingRate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    minAudioChunkSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    startOfUtteranceThreshold: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    endOfUtteranceThreshold: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.StreamingSpeechRecognition}
 */
proto.ondewo.s2t.StreamingSpeechRecognition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.StreamingSpeechRecognition;
  return proto.ondewo.s2t.StreamingSpeechRecognition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.StreamingSpeechRecognition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.StreamingSpeechRecognition}
 */
proto.ondewo.s2t.StreamingSpeechRecognition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTranscribeNotFinal(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCtcDecodingMethod(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSamplingRate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinAudioChunkSize(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setStartOfUtteranceThreshold(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEndOfUtteranceThreshold(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.StreamingSpeechRecognition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.StreamingSpeechRecognition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.StreamingSpeechRecognition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.StreamingSpeechRecognition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTranscribeNotFinal();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCtcDecodingMethod();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSamplingRate();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getMinAudioChunkSize();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getStartOfUtteranceThreshold();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getEndOfUtteranceThreshold();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
};


/**
 * optional bool transcribe_not_final = 1;
 * @return {boolean}
 */
proto.ondewo.s2t.StreamingSpeechRecognition.prototype.getTranscribeNotFinal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ondewo.s2t.StreamingSpeechRecognition} returns this
 */
proto.ondewo.s2t.StreamingSpeechRecognition.prototype.setTranscribeNotFinal = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string ctc_decoding_method = 2;
 * @return {string}
 */
proto.ondewo.s2t.StreamingSpeechRecognition.prototype.getCtcDecodingMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.StreamingSpeechRecognition} returns this
 */
proto.ondewo.s2t.StreamingSpeechRecognition.prototype.setCtcDecodingMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 sampling_rate = 3;
 * @return {number}
 */
proto.ondewo.s2t.StreamingSpeechRecognition.prototype.getSamplingRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.StreamingSpeechRecognition} returns this
 */
proto.ondewo.s2t.StreamingSpeechRecognition.prototype.setSamplingRate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 min_audio_chunk_size = 4;
 * @return {number}
 */
proto.ondewo.s2t.StreamingSpeechRecognition.prototype.getMinAudioChunkSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.StreamingSpeechRecognition} returns this
 */
proto.ondewo.s2t.StreamingSpeechRecognition.prototype.setMinAudioChunkSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional float start_of_utterance_threshold = 5;
 * @return {number}
 */
proto.ondewo.s2t.StreamingSpeechRecognition.prototype.getStartOfUtteranceThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.StreamingSpeechRecognition} returns this
 */
proto.ondewo.s2t.StreamingSpeechRecognition.prototype.setStartOfUtteranceThreshold = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float end_of_utterance_threshold = 6;
 * @return {number}
 */
proto.ondewo.s2t.StreamingSpeechRecognition.prototype.getEndOfUtteranceThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.StreamingSpeechRecognition} returns this
 */
proto.ondewo.s2t.StreamingSpeechRecognition.prototype.setEndOfUtteranceThreshold = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.VoiceActivityDetection.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.VoiceActivityDetection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.VoiceActivityDetection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.VoiceActivityDetection.toObject = function(includeInstance, msg) {
  var f, obj = {
    active: jspb.Message.getFieldWithDefault(msg, 1, ""),
    samplingRate: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pyannote: (f = msg.getPyannote()) && proto.ondewo.s2t.Pyannote.toObject(includeInstance, f),
    matchbox: (f = msg.getMatchbox()) && proto.ondewo.s2t.Matchbox.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.VoiceActivityDetection}
 */
proto.ondewo.s2t.VoiceActivityDetection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.VoiceActivityDetection;
  return proto.ondewo.s2t.VoiceActivityDetection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.VoiceActivityDetection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.VoiceActivityDetection}
 */
proto.ondewo.s2t.VoiceActivityDetection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setActive(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSamplingRate(value);
      break;
    case 3:
      var value = new proto.ondewo.s2t.Pyannote;
      reader.readMessage(value,proto.ondewo.s2t.Pyannote.deserializeBinaryFromReader);
      msg.setPyannote(value);
      break;
    case 4:
      var value = new proto.ondewo.s2t.Matchbox;
      reader.readMessage(value,proto.ondewo.s2t.Matchbox.deserializeBinaryFromReader);
      msg.setMatchbox(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.VoiceActivityDetection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.VoiceActivityDetection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.VoiceActivityDetection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.VoiceActivityDetection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActive();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSamplingRate();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPyannote();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ondewo.s2t.Pyannote.serializeBinaryToWriter
    );
  }
  f = message.getMatchbox();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ondewo.s2t.Matchbox.serializeBinaryToWriter
    );
  }
};


/**
 * optional string active = 1;
 * @return {string}
 */
proto.ondewo.s2t.VoiceActivityDetection.prototype.getActive = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.VoiceActivityDetection} returns this
 */
proto.ondewo.s2t.VoiceActivityDetection.prototype.setActive = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 sampling_rate = 2;
 * @return {number}
 */
proto.ondewo.s2t.VoiceActivityDetection.prototype.getSamplingRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.VoiceActivityDetection} returns this
 */
proto.ondewo.s2t.VoiceActivityDetection.prototype.setSamplingRate = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Pyannote pyannote = 3;
 * @return {?proto.ondewo.s2t.Pyannote}
 */
proto.ondewo.s2t.VoiceActivityDetection.prototype.getPyannote = function() {
  return /** @type{?proto.ondewo.s2t.Pyannote} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.Pyannote, 3));
};


/**
 * @param {?proto.ondewo.s2t.Pyannote|undefined} value
 * @return {!proto.ondewo.s2t.VoiceActivityDetection} returns this
*/
proto.ondewo.s2t.VoiceActivityDetection.prototype.setPyannote = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.VoiceActivityDetection} returns this
 */
proto.ondewo.s2t.VoiceActivityDetection.prototype.clearPyannote = function() {
  return this.setPyannote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.VoiceActivityDetection.prototype.hasPyannote = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Matchbox matchbox = 4;
 * @return {?proto.ondewo.s2t.Matchbox}
 */
proto.ondewo.s2t.VoiceActivityDetection.prototype.getMatchbox = function() {
  return /** @type{?proto.ondewo.s2t.Matchbox} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.Matchbox, 4));
};


/**
 * @param {?proto.ondewo.s2t.Matchbox|undefined} value
 * @return {!proto.ondewo.s2t.VoiceActivityDetection} returns this
*/
proto.ondewo.s2t.VoiceActivityDetection.prototype.setMatchbox = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.VoiceActivityDetection} returns this
 */
proto.ondewo.s2t.VoiceActivityDetection.prototype.clearMatchbox = function() {
  return this.setMatchbox(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.VoiceActivityDetection.prototype.hasMatchbox = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.Pyannote.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.Pyannote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.Pyannote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Pyannote.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelPath: jspb.Message.getFieldWithDefault(msg, 1, ""),
    minAudioSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    offset: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    onset: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    logScale: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    minDurationOff: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    minDurationOn: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.Pyannote}
 */
proto.ondewo.s2t.Pyannote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.Pyannote;
  return proto.ondewo.s2t.Pyannote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.Pyannote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.Pyannote}
 */
proto.ondewo.s2t.Pyannote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelPath(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinAudioSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOffset(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOnset(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLogScale(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMinDurationOff(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMinDurationOn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.Pyannote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.Pyannote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.Pyannote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Pyannote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMinAudioSize();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getOnset();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getLogScale();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getMinDurationOff();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getMinDurationOn();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
};


/**
 * optional string model_path = 1;
 * @return {string}
 */
proto.ondewo.s2t.Pyannote.prototype.getModelPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.Pyannote} returns this
 */
proto.ondewo.s2t.Pyannote.prototype.setModelPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 min_audio_size = 2;
 * @return {number}
 */
proto.ondewo.s2t.Pyannote.prototype.getMinAudioSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.Pyannote} returns this
 */
proto.ondewo.s2t.Pyannote.prototype.setMinAudioSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional float offset = 3;
 * @return {number}
 */
proto.ondewo.s2t.Pyannote.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.Pyannote} returns this
 */
proto.ondewo.s2t.Pyannote.prototype.setOffset = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float onset = 4;
 * @return {number}
 */
proto.ondewo.s2t.Pyannote.prototype.getOnset = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.Pyannote} returns this
 */
proto.ondewo.s2t.Pyannote.prototype.setOnset = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional bool log_scale = 5;
 * @return {boolean}
 */
proto.ondewo.s2t.Pyannote.prototype.getLogScale = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ondewo.s2t.Pyannote} returns this
 */
proto.ondewo.s2t.Pyannote.prototype.setLogScale = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional float min_duration_off = 6;
 * @return {number}
 */
proto.ondewo.s2t.Pyannote.prototype.getMinDurationOff = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.Pyannote} returns this
 */
proto.ondewo.s2t.Pyannote.prototype.setMinDurationOff = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float min_duration_on = 7;
 * @return {number}
 */
proto.ondewo.s2t.Pyannote.prototype.getMinDurationOn = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.Pyannote} returns this
 */
proto.ondewo.s2t.Pyannote.prototype.setMinDurationOn = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.Matchbox.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.Matchbox.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.Matchbox} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Matchbox.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelConfig: jspb.Message.getFieldWithDefault(msg, 1, ""),
    encoderPath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    decoderPath: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.Matchbox}
 */
proto.ondewo.s2t.Matchbox.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.Matchbox;
  return proto.ondewo.s2t.Matchbox.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.Matchbox} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.Matchbox}
 */
proto.ondewo.s2t.Matchbox.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelConfig(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncoderPath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDecoderPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.Matchbox.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.Matchbox.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.Matchbox} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Matchbox.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelConfig();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEncoderPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDecoderPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string model_config = 1;
 * @return {string}
 */
proto.ondewo.s2t.Matchbox.prototype.getModelConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.Matchbox} returns this
 */
proto.ondewo.s2t.Matchbox.prototype.setModelConfig = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string encoder_path = 2;
 * @return {string}
 */
proto.ondewo.s2t.Matchbox.prototype.getEncoderPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.Matchbox} returns this
 */
proto.ondewo.s2t.Matchbox.prototype.setEncoderPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string decoder_path = 3;
 * @return {string}
 */
proto.ondewo.s2t.Matchbox.prototype.getDecoderPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.Matchbox} returns this
 */
proto.ondewo.s2t.Matchbox.prototype.setDecoderPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ondewo.s2t.PostProcessing.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.PostProcessing.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.PostProcessing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.PostProcessing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.PostProcessing.toObject = function(includeInstance, msg) {
  var f, obj = {
    pipelineList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    postProcessors: (f = msg.getPostProcessors()) && proto.ondewo.s2t.PostProcessors.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.PostProcessing}
 */
proto.ondewo.s2t.PostProcessing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.PostProcessing;
  return proto.ondewo.s2t.PostProcessing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.PostProcessing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.PostProcessing}
 */
proto.ondewo.s2t.PostProcessing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addPipeline(value);
      break;
    case 2:
      var value = new proto.ondewo.s2t.PostProcessors;
      reader.readMessage(value,proto.ondewo.s2t.PostProcessors.deserializeBinaryFromReader);
      msg.setPostProcessors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.PostProcessing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.PostProcessing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.PostProcessing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.PostProcessing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPipelineList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getPostProcessors();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ondewo.s2t.PostProcessors.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string pipeline = 1;
 * @return {!Array<string>}
 */
proto.ondewo.s2t.PostProcessing.prototype.getPipelineList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ondewo.s2t.PostProcessing} returns this
 */
proto.ondewo.s2t.PostProcessing.prototype.setPipelineList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ondewo.s2t.PostProcessing} returns this
 */
proto.ondewo.s2t.PostProcessing.prototype.addPipeline = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ondewo.s2t.PostProcessing} returns this
 */
proto.ondewo.s2t.PostProcessing.prototype.clearPipelineList = function() {
  return this.setPipelineList([]);
};


/**
 * optional PostProcessors post_processors = 2;
 * @return {?proto.ondewo.s2t.PostProcessors}
 */
proto.ondewo.s2t.PostProcessing.prototype.getPostProcessors = function() {
  return /** @type{?proto.ondewo.s2t.PostProcessors} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.PostProcessors, 2));
};


/**
 * @param {?proto.ondewo.s2t.PostProcessors|undefined} value
 * @return {!proto.ondewo.s2t.PostProcessing} returns this
*/
proto.ondewo.s2t.PostProcessing.prototype.setPostProcessors = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.PostProcessing} returns this
 */
proto.ondewo.s2t.PostProcessing.prototype.clearPostProcessors = function() {
  return this.setPostProcessors(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.PostProcessing.prototype.hasPostProcessors = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.PostProcessors.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.PostProcessors.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.PostProcessors} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.PostProcessors.toObject = function(includeInstance, msg) {
  var f, obj = {
    symSpell: (f = msg.getSymSpell()) && proto.ondewo.s2t.SymSpell.toObject(includeInstance, f),
    normalization: (f = msg.getNormalization()) && proto.ondewo.s2t.Normalization.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.PostProcessors}
 */
proto.ondewo.s2t.PostProcessors.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.PostProcessors;
  return proto.ondewo.s2t.PostProcessors.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.PostProcessors} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.PostProcessors}
 */
proto.ondewo.s2t.PostProcessors.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ondewo.s2t.SymSpell;
      reader.readMessage(value,proto.ondewo.s2t.SymSpell.deserializeBinaryFromReader);
      msg.setSymSpell(value);
      break;
    case 2:
      var value = new proto.ondewo.s2t.Normalization;
      reader.readMessage(value,proto.ondewo.s2t.Normalization.deserializeBinaryFromReader);
      msg.setNormalization(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.PostProcessors.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.PostProcessors.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.PostProcessors} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.PostProcessors.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSymSpell();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ondewo.s2t.SymSpell.serializeBinaryToWriter
    );
  }
  f = message.getNormalization();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ondewo.s2t.Normalization.serializeBinaryToWriter
    );
  }
};


/**
 * optional SymSpell sym_spell = 1;
 * @return {?proto.ondewo.s2t.SymSpell}
 */
proto.ondewo.s2t.PostProcessors.prototype.getSymSpell = function() {
  return /** @type{?proto.ondewo.s2t.SymSpell} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.SymSpell, 1));
};


/**
 * @param {?proto.ondewo.s2t.SymSpell|undefined} value
 * @return {!proto.ondewo.s2t.PostProcessors} returns this
*/
proto.ondewo.s2t.PostProcessors.prototype.setSymSpell = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.PostProcessors} returns this
 */
proto.ondewo.s2t.PostProcessors.prototype.clearSymSpell = function() {
  return this.setSymSpell(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.PostProcessors.prototype.hasSymSpell = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Normalization normalization = 2;
 * @return {?proto.ondewo.s2t.Normalization}
 */
proto.ondewo.s2t.PostProcessors.prototype.getNormalization = function() {
  return /** @type{?proto.ondewo.s2t.Normalization} */ (
    jspb.Message.getWrapperField(this, proto.ondewo.s2t.Normalization, 2));
};


/**
 * @param {?proto.ondewo.s2t.Normalization|undefined} value
 * @return {!proto.ondewo.s2t.PostProcessors} returns this
*/
proto.ondewo.s2t.PostProcessors.prototype.setNormalization = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ondewo.s2t.PostProcessors} returns this
 */
proto.ondewo.s2t.PostProcessors.prototype.clearNormalization = function() {
  return this.setNormalization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ondewo.s2t.PostProcessors.prototype.hasNormalization = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.SymSpell.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.SymSpell.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.SymSpell} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.SymSpell.toObject = function(includeInstance, msg) {
  var f, obj = {
    dictPath: jspb.Message.getFieldWithDefault(msg, 1, ""),
    maxDictionaryEditDistance: jspb.Message.getFieldWithDefault(msg, 2, 0),
    prefixLength: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.SymSpell}
 */
proto.ondewo.s2t.SymSpell.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.SymSpell;
  return proto.ondewo.s2t.SymSpell.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.SymSpell} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.SymSpell}
 */
proto.ondewo.s2t.SymSpell.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDictPath(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxDictionaryEditDistance(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrefixLength(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.SymSpell.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.SymSpell.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.SymSpell} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.SymSpell.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDictPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMaxDictionaryEditDistance();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPrefixLength();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string dict_path = 1;
 * @return {string}
 */
proto.ondewo.s2t.SymSpell.prototype.getDictPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.SymSpell} returns this
 */
proto.ondewo.s2t.SymSpell.prototype.setDictPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 max_dictionary_edit_distance = 2;
 * @return {number}
 */
proto.ondewo.s2t.SymSpell.prototype.getMaxDictionaryEditDistance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.SymSpell} returns this
 */
proto.ondewo.s2t.SymSpell.prototype.setMaxDictionaryEditDistance = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 prefix_length = 3;
 * @return {number}
 */
proto.ondewo.s2t.SymSpell.prototype.getPrefixLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ondewo.s2t.SymSpell} returns this
 */
proto.ondewo.s2t.SymSpell.prototype.setPrefixLength = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.Normalization.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.Normalization.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.Normalization} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Normalization.toObject = function(includeInstance, msg) {
  var f, obj = {
    language: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.Normalization}
 */
proto.ondewo.s2t.Normalization.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.Normalization;
  return proto.ondewo.s2t.Normalization.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.Normalization} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.Normalization}
 */
proto.ondewo.s2t.Normalization.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.Normalization.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.Normalization.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.Normalization} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Normalization.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string language = 1;
 * @return {string}
 */
proto.ondewo.s2t.Normalization.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.Normalization} returns this
 */
proto.ondewo.s2t.Normalization.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ondewo.s2t.Logging.prototype.toObject = function(opt_includeInstance) {
  return proto.ondewo.s2t.Logging.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ondewo.s2t.Logging} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Logging.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    path: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ondewo.s2t.Logging}
 */
proto.ondewo.s2t.Logging.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ondewo.s2t.Logging;
  return proto.ondewo.s2t.Logging.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ondewo.s2t.Logging} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ondewo.s2t.Logging}
 */
proto.ondewo.s2t.Logging.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ondewo.s2t.Logging.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ondewo.s2t.Logging.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ondewo.s2t.Logging} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ondewo.s2t.Logging.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.ondewo.s2t.Logging.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.Logging} returns this
 */
proto.ondewo.s2t.Logging.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.ondewo.s2t.Logging.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ondewo.s2t.Logging} returns this
 */
proto.ondewo.s2t.Logging.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.ondewo.s2t.CTCDecoding = {
  GREEDY: 0,
  BEAM_SEARCH_WITH_LM: 1
};

goog.object.extend(exports, proto.ondewo.s2t);
